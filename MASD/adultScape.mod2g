use common as knowledge.
use map as knowledge.
use printText as actionspec.
use adultRecomputeStatus as module.
use adultMove as module.

focus=select.
exit=nogoals.

module adultScape {
	if 
		bel(recompute_status)
	then
		delete(recompute_status) +
		adultRecomputeStatus.
		
	if 
		bel(my_place(E), exit(E), my_name(N), concat_strings(N, "Thanks God, I managed to scape. Bye!", "", M)) 
	then 
		printText(M) +
		drop(scape).
			
	% If there are children not guided here I must stay
	if 
		not(bel(going(_,_))),
		bel(my_place(X)), 
		bel(kid_at(_, X, playing)), 
		bel(my_name(Me), concat_strings(Me, "Planing to stay at ", X, M))
	then 
		printText(M) +
		insert(query_status(X)) +
		insert(going(X, X)).

	% If there aren't children playing, I can move
	if 
		not(bel(going(_,_))),
		bel(my_place(X)), 
		not(bel(kid_at(_, X, playing))), 
		bel(path_to_exit([X, N| _]),
		my_name(Me), concat_strings(Me, "Planing to go to ", N, M))
	then 
		printText(M) +
		insert(query_status(N)) +
		insert(going(X, N)).

	if 
		bel(tick, going(_, _))
	then
		adultMove.
	
}